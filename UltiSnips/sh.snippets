snippet usg "Classing usage"
usage() {
	`!p snip.rv += 'echo "Usage: {} ${{1:[ARGS]}}"'.format(snip.basename)`

	exit 1
}$0

[ $# -ne ${2:ARGS_NUM} ] && usage
endsnippet

snippet assert "Exit if condition is false"
${1:CONDITION} || { echo ${2:ERR_MSG}; exit 1; }
$0
endsnippet

snippet assertf "Exit if condition is true"
${1:CONDITION} && { echo ${2:ERR_MSG}; exit 1; }
$0
endsnippet

snippet import "Assert that program exists"
command -v ${1:PROGRAM_NAME} &>/dev/null || { echo "Please install $1 to continue"; exit 1; }
$0
endsnippet

# TODO: Do this programmatically
snippet row1 "Get first element in row"
awk '{ print \$1 }'
endsnippet
snippet row2 "Get second element in row"
awk '{ print \$2 }'
endsnippet
snippet row3 "Get third element in row"
awk '{ print \$3 }'
endsnippet
snippet row4 "Get fourth element in row"
awk '{ print \$4 }'
endsnippet

########################
# Bash specific things #
########################

snippet parseflags "Parse flags"
# Parse flags
${1:INIT}
while [ -n "$(printf "%s\n" \$1 | grep '^-')" -a ! "\$1" == '--' ]; do case \$1 in
    -${2:SHORT_NAME} | --${3:LONG_NAME} )
        shift
        ${4:BODY}
        ;;
    *)
        printf "Unknown flag: \$1\n"
        exit 1
esac; done
if [ "\$1" == '--' ]; then shift; fi
$0
endsnippet
